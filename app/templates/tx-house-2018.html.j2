<!DOCTYPE html>
<html class='map-page'>
  <head>
    <title>Democrats Running for the Texas House of Representatives 2018</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
  </head>
  <body class='map-page'>
	  <script src="https://use.fontawesome.com/2d04c7b284.js"></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/tabletop.js/1.5.1/tabletop.min.js'></script>
    <script src="https://unpkg.com/topojson@3"></script>
    <script type="text/javascript">

      var spreadSheetURL = 'https://docs.google.com/spreadsheets/d/1jSKYYQgFo3OoTZG4ufvHgEX4aPhyGhLo-_OHo_o0QaE/edit?usp=sharing' 
      var districts;
      var topoData;

      function initSheet() {

        Tabletop.init( { key: spreadSheetURL,
                         callback: function(data, tabletop) {
                             districts = data;
                             // console.log(districts);
                             loadMapScript();
                         },
                         debug: true,
                         simpleSheet: true } )
      }

      var map;
      var infoWindow;

      function initMap() {

        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: {{ latitude }}, lng: -{{ longitude }}},
          zoom: 6
        });

        var rinc = [];
        var rincObjs = districts.filter(function(obj){
          var re = /.*r[io]nc.*/i;
          return obj.Status.match(re);
        });

        rincObjs.forEach(function(obj){
          rinc.push(obj.District);
        });

        var di = [];
        var diObjs = districts.filter(function(obj){
          var re = /.*di.*/i;
          return obj.Status.match(re);
        });

        diObjs.forEach(function(obj){
          di.push(obj.District);
        });

        var ridc = [];
        var ridcObjs = districts.filter(function(obj){
          var re = /.*r[io]dc.*/i;
          return obj.Status.match(re);
        });

        ridcObjs.forEach(function(obj){
          ridc.push(obj.District);
        });

        geoJsonObject = topojson.feature(topoData, topoData.objects.districts);
        map.data.addGeoJson(geoJsonObject);
        // map.data.loadGeoJson('{{ geojson }}');

        var rincColor = '#a60202';
        var diColor = '#020bc2';
        var ridcColor = '#570283';

        map.data.setStyle(function(feature) {

          var district = feature.getProperty('NAME'); // .replace(/\b0+/g, '');
          // console.log(district);

          feature.setProperty('name', district);
          // console.log(feature.getProperty('name'));
          // var district = districtNumber;
          // var color = districts.indexOf(district) > -1 ? vacantColor : activeColor;
					if ( rinc.indexOf(district) > -1 ) {
						color = rincColor;
					} else if ( di.indexOf(district) > -1 ) {
						color = diColor;
					} else if ( ridc.indexOf(district) > -1 ) {
						color = ridcColor;
					}
					// console.log(color);
          // var opacity = noRegistered.indexOf(district) > -1 ? 0 : 0.2;
          return {
            fillColor: color,
            fillOpacity: 0.6,
            strokeColor: color,
            strokeWeight: 0.8,
            strokeOpacity: 0.8
          };
        });

        map.data.addListener('click', showWindow );

        infoWindow = new google.maps.InfoWindow();


      }

      /** @this {google.maps.Polygon} */
      function showWindow(event) {
        // Since this polygon has only one path, we can call getPath() to return the
        // MVCArray of LatLngs.
        //var vertices = this.getPath();
        var districtNumber =  event.feature.getProperty('NAME'); // .replace(/\b0+/g, '');
        var districtObject = districts.filter(function(obj){
          return obj.District == districtNumber;
        });
        // var chairName = districtObject[0].Name;
        // var chairEmail = districtObject[0].Email;
        // var chairPhone = districtObject[0].Phone;

        // console.log(chairName) + "<br>";

        var contentString = '<b>HD ' + districtNumber + '</b>';

        map.data.revertStyle();
        map.data.overrideStyle(event.feature, {strokeWeight: 2});

        // Replace the info window's content and position.
        infoWindow.setContent(contentString);
        infoWindow.setPosition(event.latLng);

        infoWindow.open(map);
      }

      // Download JSON
      var request = new XMLHttpRequest();
      request.open('GET', '/static/maps/tx-house-2018.json' , true);

      request.onload = function() {
        if (request.status >= 200 && request.status < 400) {
          // Success!
          topoData = JSON.parse(request.responseText);
          initSheet();
        } else {
          console.log('Error downloading');
        }
      };

      request.onerror = function() {
          // There was a connection error of some sort
      };

      request.send();

      function loadMapScript() {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyATRjXrmXQuVmYrbE9bbOHfyzhALGHH5G4&callback=initMap';
        document.body.appendChild(script);
      }

    </script>

    <div id="map"><div id="spinner"><i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
		    <span class="sr-only">Loading...</span></div></div>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-99261577-1', 'auto');
      ga('send', 'pageview');
    </script>
  </body>
</html>
